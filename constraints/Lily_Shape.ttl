@base <https://lily.fvhp.net/rdf/constraints/>
@prefix schema: <http://schema.org/>
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
@prefix lily: <https://lily.fvhp.net/rdf/IRIs/lily_schema.ttl#>
@prefix foaf: <http://xmlns.com/foaf/0.1/>
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>
@prefix sh: <http://www.w3.org/ns/shacl#>
@prefix owl: <http://www.w3.org/2002/07/owl#>.

<prefixes> a owl:Ontology;
    owl:imports sh: ;
    sh:declare [
        sh:prefix "lily" ;
        sh:namespace "https://lily.fvhp.net/rdf/IRIs/lily_schema.ttl#"^^xsd:anyURI ;
    ], [
        sh:prefix "rdfs" ;
        sh:namespace "http://www.w3.org/2000/01/rdf-schema#"^^xsd:anyURI ;
    ], [
        sh:prefix "schema" ;
        sh:namespace "http://schema.org/"^^xsd:anyURI ;
    ]
.

<lily-charmShape>
    a sh:NodeShape ;
    sh:sparql [
        a sh:SPARQLConstraint ;
        sh:message "リリィの使用CHARMに記述されているCHARMのユーザ一覧にはそのリリィが記述されていなければならない。" ;
        sh:prefixes <prefixes> ;
        sh:select """SELECT $this ?charm ?value
            WHERE {
                ?value lily:charm $this .
                $this lily:resource ?charm .
                FILTER NOT EXISTS {
                    ?charm lily:user ?value .
                }
            }""" ;
    ] ;
    sh:property [
        sh:path lily:resource ;
        sh:class lily:Charm ;
        sh:minCount 1 ;
    ]
.

<lily-castShape>
    a sh:NodeShape ;
    sh:property [
        sh:path lily:performIn ;
        sh:or (
            [
                sh:class lily:Game ;
            ]
            [
                sh:class lily:Play ;
            ]
            [
                sh:class lily:AnimeSeries ;
            ]
            [
                sh:class lily:Concert ;
            ]
        ) ;
        sh:minCount 1 ;
    ]
.

<lily-relationshipShape>
    a sh:NodeShape;
    sh:property [
        sh:path lily:resource ;
        sh:class lily:Character ;
        sh:minCount 1 ;
    ], [
        sh:path lily:additionalInformation ;
        sh:minCount 1 ;
    ]
.

<lilyShape>
    a sh:NodeShape;
    sh:targetClass lily:Lily;
    sh:property [
        rdfs:label "リリィのラベルの制約";
        rdfs:comment "必ず一つだけ存在する";
        sh:path rdfs:label;
        sh:datatype xsd:string;
        sh:minCount 1;
        sh:maxCount 1;
    ], [
        rdfs:label "リリィの名前の制約";
        rdfs:comment "日本語と英語表記が最大一つづつ存在する想定のため、uniqueLang=true";
        sh:path schema:name;
        sh:datatype rdf:langString;
        sh:uniqueLang true;
    ], [
        rdfs:label "名前の仮名の制約";
        rdfs:comment "仮名は日本語なのでlang=ja";
        sh:path lily:nameKana;
        sh:datatype rdf:langString;
        sh:languageIn ("ja");
        sh:maxCount 1;
    ], [
        rdfs:label "下の名前の制約";
        rdfs:comment "日本語、英語表記一つづつ存在する想定のため、uniqueLang=true";
        sh:path schema:givenName;
        sh:datatype rdf:langString;
        sh:uniqueLang true;
    ], [
        rdfs:label "上の名前の制約";
        rdfs:comment "日本語、英語表記一つづつ存在する想定のため、uniqueLang=true";
        sh:path schema:familyName;
        sh:datatype rdf:langString;
        sh:uniqueLang true;
    ], [
        rdfs:label "下の名前の仮名の制約";
        rdfs:comment "仮名は日本語なのでlang=ja";
        sh:path lily:givenNameKana;
        sh:datatype rdf:langString;
        sh:languageIn ("ja");
        sh:maxCount 1;
    ], [
        rdfs:label "上の名前の仮名の制約";
        rdfs:comment "仮名は日本語なのでlang=ja";
        sh:path lily:familyNameKana;
        sh:datatype rdf:langString;
        sh:languageIn ("ja");
        sh:maxCount 1;
    ], [
        rdfs:label "年齢の制約";
        rdfs:comment "年齢が数値じゃない人がいるかもしれない";
        sh:path foaf:age;
        sh:xone (
            [
                sh:datatype xsd:integer;
                sh:minInclusive 0;
            ]
            [
                sh:datatype rdf:langString;
                sh:languageIn ("ja")
            ]
        );
        sh:maxCount 1;
    ], [
        rdfs:label "身長の制約";
        rdfs:comment "何人かのリリィは身長が数値じゃないかもしれない";
        sh:path schema:height;
        sh:xone (
            [
                sh:datatype xsd:float;
                sh:minExclusive 0;
            ]
            [
                sh:datatype rdf:langString;
                sh:languageIn ("ja")
            ]
        );
        sh:maxCount 1;
    ], [
        rdfs:label "体重の制約";
        rdfs:comment "何人かのリリィは体重が数値じゃない（例: 秘密）";
        sh:path schema:weight;
        sh:xone (
            [
                sh:datatype xsd:float;
                sh:minExclusive 0;
            ]
            [
                sh:datatype rdf:langString;
                sh:languageIn ("ja")
            ]
        );
        sh:maxCount 1;
    ], [
        rdfs:label "誕生日の制約";
        sh:path schema:birthDate;
        sh:datatype xsd:gMonthDay;
        sh:maxCount 1;
    ], [
        rdfs:label "姓名状態の制約";
        rdfs:comment "存命・死亡・不明のいずれか";
        sh:path lily:lifeStatus;
        sh:datatype xsd:string;
        sh:in ("alive" "dead" "unknown");
        sh:maxCount 1;
    ], [
        rdfs:label "血液型の制約";
        rdfs:comment "公式に「不明」の場合も想定して「不明」も許容";
        sh:path lily:bloodType;
        sh:datatype xsd:string;
        sh:in ("A" "B" "O" "AB" "不明");
        sh:maxCount 1;
    ], [
        rdfs:label "性別の制約";
        rdfs:comment "femaleかmaleのみで、性別は必ず一つだけ存在する";
        sh:path schema:gender;
        sh:datatype xsd:string;
        sh:in ("female" "male");
        sh:minCount 1;
        sh:maxCount 1;
    ], [
        rdfs:label "テーマカラーの制約";
        rdfs:comment "最大一つだけ存在して、目的語の型はhexBinary";
        sh:path lily:color;
        sh:datatype xsd:hexBinary;
        sh:maxCount 1;
    ], [
        rdfs:label "出身地の制約";
        rdfs:comment "日本語、英語表記が最大一つづつ存在する想定のため、uniqueLang=true";
        sh:path schema:birthPlace;
        sh:datatype rdf:langString;
        sh:uniqueLang true;
    ], [
        rdfs:label "好きなものの制約";
        rdfs:comment "今の所英語で書くリリィはいないので日本語のみ受け入れ、リリィによっては複数あるので数の制限はない";
        sh:path lily:favorite;
        sh:datatype rdf:langString;
        sh:languageIn ("ja");
    ], [
        rdfs:label "苦手なものの制約";
        rdfs:comment "今の所英語で書くリリィはいないので日本語のみ受け入れ、リリィによっては複数あるので数の制限はない";
        sh:path lily:notGood;
        sh:datatype rdf:langString;
        sh:languageIn ("ja");
    ], [
        rdfs:label "趣味・特技の制約";
        rdfs:comment "今の所英語で書くリリィはいないので日本語のみ受け入れ、リリィによっては複数あるので数の制限はない";
        sh:path lily:hobby_talent;
        sh:datatype rdf:langString;
        sh:languageIn ("ja");
    ], [
        rdfs:label "スキラー数値の制約";
        rdfs:comment "リリィのスキラー数値は50以上100以下の整数";
        sh:path lily:skillerVal;
        sh:datatype xsd:integer;
        sh:minInclusive 50;
        sh:maxInclusive 100;
    ], [
        rdfs:label "レアスキルの制約";
        sh:path lily:rareSkill;
        sh:datatype xsd:string;
        sh:maxCount 1;
        sh:in (
            "ファンタズム"
            "鷹の目"
            "ルナティックトランサー"
            "天の秤目"
            "ヘリオスフィア"
            "ブレイブ"
            "縮地"
            "レジスタ"
            "テスタメント"
            "ゼノンパラドキサ"
            "円環の御手"
            "Z"
            "ユーバーザイン"
            "この世の理"
            "フェイズトランセンデンス"
            "カリスマ"
            "ラプラス"
            "未覚醒"
        );
    ], [
        rdfs:label "サブスキルの制約";
        sh:path lily:subSkill;
        sh:datatype xsd:string;
        sh:in (
            "虹の軌跡"
            "千里眼"
            "狂乱の閾"
            "魔眼"
            "聖域転換"
            "インビジブルワン"
            "軍神の加護"
            "約束の領域"
            "ステルス"
            "Whole order"
            "Awakening"
            "カリスマ"
        );
    ], [
        rdfs:label "強化リリィかどうかの制約";
        rdfs:comment "強化リリィであることが明言されている or 自明である場合はtrue、そうでない場合は不明も含めて必ずfalse";
        sh:path lily:isBoosted;
        sh:datatype xsd:boolean;
        sh:minCount 1;
        sh:maxCount 1;
    ], [
        rdfs:label "ブーステッドスキルの制約";
        sh:path lily:boostedSkill;
        sh:datatype xsd:string;
        sh:in (
            "リジェネレーター"
            "アルケミートレース"
            "エンハンスメント"
            "エーテルボディ"
            "ドレイン"
            "連続強化補助"
            "ノスフェラトゥ"
            "マギリフレクター"
            "オートヒール"
            "アストラルガーダー"
        );
    ], [
        rdfs:label "使用CHARMの制約";
        rdfs:comment "空白ノードのShapeを検証";
        sh:path lily:charm;
        sh:node <lily-charmShape>;
    ] ;
    sh:xone (
        [
            sh:property [
                rdfs:label "所属ガーデンの制約";
                sh:path lily:garden;
                sh:datatype xsd:string;
                sh:not [
                    sh:pattern "^鹿野苑高等女学園$";
                ] ;
                sh:maxCount 1;
            ]
        ]
        [
            sh:property [
                rdfs:label "所属ガーデンの制約(鹿野苑高等女学園)";
                sh:path lily:garden;
                sh:datatype xsd:string;
                sh:pattern "^鹿野苑高等女学園$";
                sh:maxCount 1;
            ], [
                rdfs:label "僧名の制約";
                sh:path lily:dharmaName;
                sh:datatype rdf:langString;
                sh:languageIn ("ja");
                sh:minCount 1;
                sh:maxCount 1;
            ], [
                rdfs:label "僧名よみがなの制約";
                sh:path lily:dharmaNameKana;
                sh:datatype rdf:langString;
                sh:languageIn ("ja");
                sh:minCount 1;
                sh:maxCount 1;
            ]
        ]
    );
    sh:property [
        rdfs:label "所属学科の制約";
        sh:path lily:gardenDepartment;
        sh:datatype xsd:string;
        sh:maxCount 1;
    ], [
        rdfs:label "学年の制約";
        sh:path lily:grade;
        sh:datatype xsd:integer;
        sh:minInclusive 1;
        sh:maxCount 1;
    ], [
        rdfs:label "所属クラスの制約";
        sh:path lily:class;
        sh:datatype xsd:string;
        sh:maxCount 1;
    ], [
        rdfs:label "所属レギオンの制約";
        rdfs:comment "目的語はlily:Legion、最大一つ";
        sh:path lily:legion;
        sh:class lily:Legion;
        sh:sparql [
            a sh:SPARQLConstraint ;
            sh:message "リリィの所属レギオンに記述されているレギオンのメンバー一覧にはそのリリィが記述されていなければならない。" ;
            sh:prefixes <prefixes> ;
            sh:select """SELECT $this ?legion
                WHERE {
                    $this lily:legion ?legion .
                    FILTER NOT EXISTS {
                        ?legion ?p $this .
                        FILTER(?p = schema:member || ?p = lily:submember)
                    }
                }""" ;
        ] ;
        sh:maxCount 1;
    ], [
        rdfs:label "ポジションの制約";
        sh:path lily:position;
        sh:datatype xsd:string;
        sh:in (
            "AZ"
            "TZ"
            "BZ"
        );
        sh:maxCount 3;
    ], [
        rdfs:label "過去の所属レギオンの制約";
        rdfs:comment "目的語はlily:Legion";
        sh:path lily:pastLegion;
        sh:class lily:Legion;
        sh:sparql [
            a sh:SPARQLConstraint ;
            sh:message "リリィの過去の所属レギオンに記述されているレギオンのメンバー一覧にはそのリリィが記述されていなければならない。" ;
            sh:prefixes <prefixes> ;
            sh:select """SELECT $this ?legion
                WHERE {
                    $this lily:pastLegion ?legion .
                    FILTER NOT EXISTS {
                        ?legion ?p $this .
                        FILTER(?p = schema:member || ?p = lily:submember || ?p = schema:alumni)
                    }
                }""" ;
        ] ;
    ], [
        rdfs:label "参加部隊の制約";
        rdfs:comment "目的語はlily:Taskforce";
        sh:path lily:taskforce;
        sh:class lily:Taskforce;
        sh:sparql [
            a sh:SPARQLConstraint ;
            sh:message "リリィの参加部隊に記述されている部隊のメンバー一覧にはそのリリィが記述されていなければならない。" ;
            sh:prefixes <prefixes> ;
            sh:select """SELECT $this ?tf
                WHERE {
                    $this lily:taskforce ?tf .
                    FILTER NOT EXISTS {
                        ?tf ?p $this .
                        FILTER(?p = schema:member || ?p = lily:submember)
                    }
                }""" ;
        ] ;
    ], [
        rdfs:label "過去の参加部隊の制約";
        rdfs:comment "目的語はlily:Taskforce";
        sh:path lily:pastTaskforce;
        sh:class lily:Taskforce;
        sh:sparql [
            a sh:SPARQLConstraint ;
            sh:message "リリィの過去の参加部隊に記述されている部隊のメンバー一覧にはそのリリィが記述されていなければならない。" ;
            sh:prefixes <prefixes> ;
            sh:select """SELECT $this ?tf
                WHERE {
                    $this lily:pastTaskforce ?tf .
                    FILTER NOT EXISTS {
                        ?tf ?p $this .
                        FILTER(?p = schema:member || ?p = lily:submember || ?p = schema:alumni)
                    }
                }""" ;
        ] ;
    ], [
        rdfs:label "シュッツエンゲルの制約";
        rdfs:comment "シュッツエンゲルは最大一人";
        sh:path lily:schutzengel;
        sh:class lily:Lily;
        sh:maxCount 1;
        sh:sparql [
            a sh:SPARQLConstraint ;
            sh:message "シュッツエンゲルのシルトは自分でなければならない。" ;
            sh:prefixes <prefixes> ;
            sh:select """SELECT $this ?schutzengel
                WHERE {
                    $this lily:schutzengel ?schutzengel .
                    FILTER NOT EXISTS {
                        ?schutzengel lily:schild $this .
                    }
                }""" ;
        ] ;
    ], [
        rdfs:label "過去のシュッツエンゲルの制約";
        rdfs:comment "過去のシュッツエンゲルは複数いる可能性が否定できない";
        sh:path lily:pastSchutzengel;
        sh:class lily:Lily;
        sh:sparql [
            a sh:SPARQLConstraint ;
            sh:message "過去のシュッツエンゲルの過去のシルトには自分がいなければならない。" ;
            sh:prefixes <prefixes> ;
            sh:select """SELECT $this ?pastSchutzengel
                WHERE {
                    $this lily:pastSchutzengel ?pastSchutzengel .
                    FILTER NOT EXISTS {
                        ?pastSchutzengel lily:pastSchild $this .
                    }
                }""" ;
        ] ;
    ], [
        rdfs:label "シルトの制約";
        rdfs:comment "シルトは最大一人";
        sh:path lily:schild;
        sh:class lily:Lily;
        sh:maxCount 1;
        sh:sparql [
            a sh:SPARQLConstraint ;
            sh:message "シルトのシュッツエンゲルは自分でなければならない。" ;
            sh:prefixes <prefixes> ;
            sh:select """SELECT $this ?schild
                WHERE {
                    $this lily:schild ?schild .
                    FILTER NOT EXISTS {
                        ?schild lily:schutzengel $this .
                    }
                }""" ;
        ] ;
    ], [
        rdfs:label "過去のシルトの制約";
        rdfs:comment "過去のシルトは複数いる可能性が否定できない";
        sh:path lily:pastSchild;
        sh:class lily:Lily;
        sh:sparql [
            a sh:SPARQLConstraint ;
            sh:message "過去のシルトの過去のシュッツエンゲルには自分がいなければならない。" ;
            sh:prefixes <prefixes> ;
            sh:select """SELECT $this ?pastSchild
                WHERE {
                    $this lily:schild ?schild .
                    FILTER NOT EXISTS {
                        ?schild lily:schutzengel $this .
                    }
                }""" ;
        ] ;
    ], [
        rdfs:label "シュベスター(姉)の制約";
        rdfs:comment "シュベスター(姉)は最大一人";
        sh:path lily:olderSchwester;
        sh:class lily:Lily;
        sh:maxCount 1;
        sh:sparql [
            a sh:SPARQLConstraint ;
            sh:message "シュベスター(姉)のシュベスター(妹)は自分でなければならない。" ;
            sh:prefixes <prefixes> ;
            sh:select """SELECT $this ?olderSchwester
                WHERE {
                    $this lily:olderSchwester ?olderSchwester .
                    FILTER NOT EXISTS {
                        ?olderSchwester lily:youngerSchwester $this .
                    }
                }""" ;
        ] ;
    ], [
        rdfs:label "過去のシュベスター(姉)の制約";
        rdfs:comment "過去のシュベスター(姉)は複数いる可能性が否定できない";
        sh:path lily:pastOlderSchwester;
        sh:class lily:Lily;
        sh:sparql [
            a sh:SPARQLConstraint ;
            sh:message "過去のシュベスター(姉)の過去のシュベスター(妹)には自分がいなければならない。" ;
            sh:prefixes <prefixes> ;
            sh:select """SELECT $this ?pastOlderSchwester
                WHERE {
                    $this lily:pastOlderSchwester ?pastOlderSchwester .
                    FILTER NOT EXISTS {
                        ?pastOlderSchwester lily:pastYoungerSchwester $this .
                    }
                }""" ;
        ] ;
    ], [
        rdfs:label "シュベスター(妹)の制約";
        rdfs:comment "シュベスター(妹)は最大一人";
        sh:path lily:youngerSchwester;
        sh:class lily:Lily;
        sh:maxCount 1;
        sh:sparql [
            a sh:SPARQLConstraint ;
            sh:message "シュベスター(妹)のシュベスター(姉)は自分でなければならない。" ;
            sh:prefixes <prefixes> ;
            sh:select """SELECT $this ?youngerSchwester
                WHERE {
                    $this lily:youngerSchwester ?youngerSchwester .
                    FILTER NOT EXISTS {
                        ?youngerSchwester lily:olderSchwester $this .
                    }
                }""" ;
        ] ;
    ], [
        rdfs:label "過去のシュベスター(妹)の制約";
        rdfs:comment "過去のシュベスター(妹)は複数いる可能性が否定できない";
        sh:path lily:pastYoungerSchwester;
        sh:class lily:Lily;
        sh:sparql [
            a sh:SPARQLConstraint ;
            sh:message "過去のシュベスター(妹)の過去のシュベスター(姉)には自分がいなければならない。" ;
            sh:prefixes <prefixes> ;
            sh:select """SELECT $this ?pastYoungerSchwester
                WHERE {
                    $this lily:pastYoungerSchwester ?pastYoungerSchwester .
                    FILTER NOT EXISTS {
                        ?pastYoungerSchwester lily:pastOlderSchwester $this .
                    }
                }""" ;
        ] ;
    ], [
        rdfs:label "ルームメイトの制約";
        rdfs:comment "ルームメイトは最大一人";
        sh:path lily:roomMate;
        sh:class lily:Lily;
        sh:maxCount 1;
        sh:sparql [
            a sh:SPARQLConstraint ;
            sh:message "ルームメイトのルームメイトは自分でなければならない。" ;
            sh:prefixes <prefixes> ;
            sh:select """SELECT $this ?roomMate
                WHERE {
                    $this lily:roomMate ?roomMate .
                    FILTER NOT EXISTS {
                        ?roomMate lily:roomMate $this .
                    }
                }""" ;
        ] ;
    ], [
        rdfs:label "リリィ同士の関係の制約";
        rdfs:comment "空白ノードのShapeを検証";
        sh:path lily:relationship;
        sh:node <lily-relationshipShape>;
    ], [
        rdfs:label "リリィのキャストデータの制約";
        rdfs:comment "空白ノードのShapeを検証";
        sh:path lily:cast;
        sh:node <lily-castShape>;
    ] ;
    sh:closed false.
